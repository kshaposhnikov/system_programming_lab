; Программа Hello2
; Шаблон EXE программы в стандартных директивах сегментации

; Определяет модель памяти ближнего типа. Код занимает один сегмент, данные занимают один сегмент
.MODEL small


; Определяет сегмент стека размером 1024 байт
.STACK 400h

; Определяет сегмент данных
.DATA
; Инициализируем переменную Hello
; Апострафы преобразуют символы в ASCII коды при трансляции
; 0Ah - код перевода строки, 0Dh - код установки курсора в начало строки	
Hello DB 'Hello2!',0Ah, 0Dh, '$'

; Определяем сегмент крда
.CODE

; Точка входа в программу
START:
    ; Инициализируем сегментный регистр DS, т.к. при запуске
    ; EXE программы он не определен
    ; Инициализация DS производится через регистр AX, т.к. нет команд
    ; непосредственной загрузки сегментных регистров из памяти.
	MOV AX, @DATA	; заносим адрес сегмента данных в AX
	MOV DS, AX	    ; помещаем AX в DS
	
	; Выводим строку на экран с помощью функции 09h прерывания INT 21h
	; Вывод производится с загруженного в DX адреса до знака $
	LEA DX, Hello   ; загружаем в DX адресс переменной Hello
	MOV AH, 09h     ; заносим в AH номер функции
	INT 21h         ; выводим строку на экран

	; Осуществляем корректное завершение программы с помощью функции
    ; 4Ch прерывания INT 21h. В AL помещаем код возврата.
	MOV AH, 4Ch     ; заносим в AH номер функции
	MOV AL, 00h     ; заносим в AL код возврата
	INT 21h         ; корректно выходим из программы
END start           ; конец программы